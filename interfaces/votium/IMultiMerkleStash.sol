// SPDX-License-Identifier: MIT
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.3. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface IMultiMerkleStash {
    event Claimed(
        address indexed token,
        uint256 index,
        uint256 amount,
        address indexed account,
        uint256 indexed update
    );
    event MerkleRootUpdated(
        address indexed token,
        bytes32 indexed merkleRoot,
        uint256 indexed update
    );
    event OwnershipTransferred(
        address indexed previousOwner,
        address indexed newOwner
    );

    function claim(
        address token,
        uint256 index,
        address account,
        uint256 amount,
        bytes32[] memory merkleProof
    ) external;

    function claimMulti(
        address account,
        MultiMerkleStash.claimParam[] memory claims
    ) external;

    function isClaimed(address token, uint256 index)
        external
        view
        returns (bool);

    function merkleRoot(address) external view returns (bytes32);

    function owner() external view returns (address);

    function transferOwnership(address newOwner) external;

    function update(address) external view returns (uint256);

    function updateMerkleRoot(address token, bytes32 _merkleRoot) external;
}

interface MultiMerkleStash {
    struct claimParam {
        address token;
        uint256 index;
        uint256 amount;
        bytes32[] merkleProof;
    }
}
